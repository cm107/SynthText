import os
import glob
import h5py
from PIL import Image, ImageDraw
import argparse

def get_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '--datasetPath',
        default='results/SynthText.h5',
        type=str,
        help='Path to the dataset generated by gen.py'
    )
    parser.add_argument(
        '--visDump',
        default='visDump',
        type=str,
        help='Where you want to save your dataset visualization images.'
    )
    parser.add_argument(
        '--numImages',
        default=None,
        type=int,
        help='The number of images you would like to visualize. Leave as None to visualize all images.'
    )
    args = parser.parse_args()
    assert os.path.isfile(args.datasetPath), f"Failed to find file: {args.datasetPath}"
    return args

def main(args: argparse.Namespace):
    if os.path.isdir(args.visDump):
        for _path in glob.glob(f"{args.visDump}/*.png"):
            os.remove(_path)
    os.makedirs(args.visDump, exist_ok=True)

    db = h5py.File('results/SynthText.h5', 'r')
    for i, key in enumerate(db['data'].keys()):
        if args.numImages is not None and i >= args.numImages:
            break

        ds = db['data'][key]
        img = Image.fromarray(ds[:])
        txt = ds.attrs['txt']
        txt_utf8 = ds.attrs['txt_utf8']
        charBB = ds.attrs['charBB']
        wordBB = ds.attrs['wordBB']

        charBB = charBB.transpose(2,1,0)
        wordBB = wordBB.transpose(2,1,0)
        basename = os.path.splitext(os.path.basename(ds.name))[0]

        draw = ImageDraw.Draw(img)
        for _charBB in charBB:
            for idx0, idx1 in [
                (0, 1), (1, 2), (2, 3), (3, 0)
            ]:
                draw.line(_charBB[idx0].tolist() + _charBB[idx1].tolist(), fill=(255,0,0), width=2)

        for _wordBB in wordBB:
            for idx0, idx1 in [
                (0, 1), (1, 2), (2, 3), (3, 0)
            ]:
                draw.line(_wordBB[idx0].tolist() + _wordBB[idx1].tolist(), fill=(0,0,255), width=2)

        img.save(f"{args.visDump}/{basename}.png")